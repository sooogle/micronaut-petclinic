/*
 * This file is generated by jOOQ.
 */
package io.micronaut.example.petclinic.tables.records;


import io.micronaut.example.petclinic.tables.Owners;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OwnersRecord extends UpdatableRecordImpl<OwnersRecord> implements Record6<Integer, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.owners.id</code>.
     */
    public OwnersRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.owners.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.owners.first_name</code>.
     */
    public OwnersRecord setFirstName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.owners.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.owners.last_name</code>.
     */
    public OwnersRecord setLastName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.owners.last_name</code>.
     */
    public String getLastName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.owners.address</code>.
     */
    public OwnersRecord setAddress(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.owners.address</code>.
     */
    public String getAddress() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.owners.city</code>.
     */
    public OwnersRecord setCity(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.owners.city</code>.
     */
    public String getCity() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.owners.telephone</code>.
     */
    public OwnersRecord setTelephone(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.owners.telephone</code>.
     */
    public String getTelephone() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Owners.OWNERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Owners.OWNERS.FIRST_NAME;
    }

    @Override
    public Field<String> field3() {
        return Owners.OWNERS.LAST_NAME;
    }

    @Override
    public Field<String> field4() {
        return Owners.OWNERS.ADDRESS;
    }

    @Override
    public Field<String> field5() {
        return Owners.OWNERS.CITY;
    }

    @Override
    public Field<String> field6() {
        return Owners.OWNERS.TELEPHONE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFirstName();
    }

    @Override
    public String component3() {
        return getLastName();
    }

    @Override
    public String component4() {
        return getAddress();
    }

    @Override
    public String component5() {
        return getCity();
    }

    @Override
    public String component6() {
        return getTelephone();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFirstName();
    }

    @Override
    public String value3() {
        return getLastName();
    }

    @Override
    public String value4() {
        return getAddress();
    }

    @Override
    public String value5() {
        return getCity();
    }

    @Override
    public String value6() {
        return getTelephone();
    }

    @Override
    public OwnersRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public OwnersRecord value2(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public OwnersRecord value3(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public OwnersRecord value4(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public OwnersRecord value5(String value) {
        setCity(value);
        return this;
    }

    @Override
    public OwnersRecord value6(String value) {
        setTelephone(value);
        return this;
    }

    @Override
    public OwnersRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OwnersRecord
     */
    public OwnersRecord() {
        super(Owners.OWNERS);
    }

    /**
     * Create a detached, initialised OwnersRecord
     */
    public OwnersRecord(Integer id, String firstName, String lastName, String address, String city, String telephone) {
        super(Owners.OWNERS);

        setId(id);
        setFirstName(firstName);
        setLastName(lastName);
        setAddress(address);
        setCity(city);
        setTelephone(telephone);
    }

    /**
     * Create a detached, initialised OwnersRecord
     */
    public OwnersRecord(io.micronaut.example.petclinic.tables.pojos.Owners value) {
        super(Owners.OWNERS);

        if (value != null) {
            setId(value.getId());
            setFirstName(value.getFirstName());
            setLastName(value.getLastName());
            setAddress(value.getAddress());
            setCity(value.getCity());
            setTelephone(value.getTelephone());
        }
    }
}
